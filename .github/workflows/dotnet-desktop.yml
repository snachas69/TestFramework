name: .NET Core Desktop

on:
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC
  workflow_dispatch:
    inputs:
      browser:
        description: 'Select browser for UI tests'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge

jobs:
  api_tests:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore

      - name: Run API tests
        run: dotnet test --no-build --filter "Category=API" --logger "trx;LogFileName=api_tests.trx"

      - name: Upload API test results
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          path: '**/TestResults/api_tests.trx'
        continue-on-error: true
        
  ui_tests:
    runs-on: windows-latest
    needs: api_tests
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore

      - name: Install selected browser
        shell: pwsh
        run: |
          $browser = "${{ github.event.inputs.browser }}"
          "Selected browser: $browser"
      
          Set-ExecutionPolicy Bypass -Scope Process -Force
      
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }
      
          if ($browser -eq "firefox") {
            choco install -y firefox
          } elseif ($browser -eq "edge") {
            choco install -y microsoft-edge
          } else {
            choco install -y googlechrome --ignore-checksums
          }

      - name: Update appsettings.json with selected browser
        shell: pwsh
        run: |
          $browser = "${{ github.event.inputs.browser }}"
          $path = "TestProject1/appsettings.json"
      
          Write-Host "Updating appsettings.json at: $path"
      
          if (Test-Path $path) {
            $json = Get-Content $path -Raw | ConvertFrom-Json
            $json.Browser = $browser
            $json | ConvertTo-Json -Depth 2 | Set-Content $path -Encoding UTF8
            Write-Host "appsettings.json successfully updated to use browser: $browser"
          } else {
            Write-Error "Error: appsettings.json not found at $path"
            exit 1
          }
          
      - name: Run UI tests
        run: dotnet test --no-build --filter "Category=UI" --logger "trx;LogFileName=ui_tests.trx"

      - name: Upload UI test results
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: '**/TestResults/ui_tests.trx'
      
      - name: Upload UI failure screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-failure-screenshots
          path: '**/TestResults/Screenshots/*.png'

